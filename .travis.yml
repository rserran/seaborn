language: python


dist: xenial
services:
  - xvfb


env:
  - PYTHON=3.6 DEPS=pinned MPLBACKEND=agg DOCTESTS=false
  - PYTHON=3.6 DEPS=latest MPLBACKEND=agg DOCTESTS=true
  - PYTHON=3.7 DEPS=latest MPLBACKEND=agg DOCTESTS=true
  - PYTHON=3.8 DEPS=latest MPLBACKEND=agg DOCTESTS=true
  - PYTHON=3.8 DEPS=latest MPLBACKEND=qt5agg DOCTESTS=true
  - PYTHON=3.8 DEPS=minimal MPLBACKEND=agg DOCTESTS=false


before_install:
  - sudo apt-get update -yq
  - sudo sh ci/getmsfonts.sh
  - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no 
  - conda config --add channels conda-forge
  - conda update -q conda
  - conda config --set channel_priority false
  - conda info -a


install:
  - conda create -n testenv pip python=$PYTHON
  - source activate testenv
  # Add pyqt for interactive tests since it doesn't always listed as a dependency
  # for non-interactive tests, use the lightweight matplotlib-base only
  - if [ $MPLBACKEND == "qt5agg" ];
    then (cat ci/deps_${DEPS}.txt ci/utils.txt; echo "pyqt") > deps.txt;
    else cat ci/deps_${DEPS}.txt ci/utils.txt | sed 's/matplotlib$/matplotlib-base/' > deps.txt;
    fi
  - conda install --file deps.txt
  - pip install .


before_script:
  - python ci/cache_test_datasets.py


script:
  - make lint
  - if [ $DOCTESTS == 'true' ];
    then make test;
    else make unittests;
    fi


after_success:
    - pip install codecov
    - codecov
